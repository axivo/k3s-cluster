global:
  cluster:
    dnsDomain: {{ k3s_vars.cluster.domain }}
  clusterLabel: {{ k3s_map.cluster.label }}
alertmanager:
  config:
    {{ lookup('ansible.builtin.template', 'config_alertmanager.j2') | trim | regex_replace('\n[\s\t]*\n', '\n') | indent(4) }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
      {{ victoriametrics_map.ingress.alertmanager.annotations | to_nice_yaml | indent(6) | trim }}
    enabled: {{ victoriametrics_vars.kubernetes.alertmanager.ingress.enabled | lower }}
    hosts:
      - {{ victoriametrics_map.ingress.alertmanager.hostname }}
    ingressClassName: {{ victoriametrics_map.ingress.class.name }}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.alertmanager.hostname }}
        secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.alertmanager.name }}
{% endif %}
  spec:
{% if victoriametrics_vars.kubernetes.alertmanager.replicas > 1 %}
    clusterDomainName: {{ k3s_vars.cluster.domain }}
{% endif %}
    configReloaderResources:
      limits:
{% if victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.requests.memory }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' and
      victoriametrics_vars.kubernetes.alertmanager.ingress.enabled %}
    externalURL: https://{{ victoriametrics_map.ingress.alertmanager.hostname }}
{% endif %}
{% if victoriametrics_map.spec.alertmanager.extra_args is mapping and
      victoriametrics_map.spec.alertmanager.extra_args.keys() | length > 0 %}
    extraArgs:
      {{ victoriametrics_map.spec.alertmanager.extra_args | to_nice_yaml(indent=2) | indent(6) | trim }}
{% endif %}
{% if victoriametrics_map.spec.alertmanager.extra_envs is iterable and
      victoriametrics_map.spec.alertmanager.extra_envs | length > 0 %}
    extraEnvs:
      {{ victoriametrics_map.spec.alertmanager.extra_envs | to_nice_yaml(indent=2) | trim | indent(6) }}
{% endif %}
    logLevel: {{ victoriametrics_vars.kubernetes.alertmanager.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
    rollingUpdateStrategy: RollingUpdate
    storage:
{% if victoriametrics_vars.kubernetes.alertmanager.storage.enabled is truthy %}
      volumeClaimTemplate:
        spec:
          accessModes:
            {{ victoriametrics_vars.kubernetes.alertmanager.storage.access_modes | to_nice_yaml | indent(12) | trim }}
          resources:
            requests:
              storage: {{ victoriametrics_vars.kubernetes.alertmanager.storage.size }}
          storageClassName: {{ victoriametrics_vars.kubernetes.alertmanager.storage.class }}
{% else %}
    emptyDir:
      sizeLimit: {{ victoriametrics_vars.kubernetes.alertmanager.storage.size }}
{% endif %}
{% if victoriametrics_vars.kubernetes.alertmanager.replicas < 2 %}
    replicaCount: 2
{% else %}
    replicaCount: {{ victoriametrics_vars.kubernetes.alertmanager.replicas }}
{% endif %}
    resources:
      limits:
{% if victoriametrics_vars.kubernetes.alertmanager.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.resources.requests.memory }}
  useManagedConfig: true
coreDns:
{% if coredns_vars.kubernetes.deployment.legacy is falsy %}
  service:
    selector:
      k8s-app: coredns
{% endif %}
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: metrics
defaultDashboards:
  dashboards:
    victoriametrics-operator:
      enabled: true
    victoriametrics-vmalert:
      enabled: true
  defaultTimezone: {{ victoriametrics_vars.kubernetes.default_dashboards.timezone }}
grafana:
  admin:
    existingSecret: {{ victoriametrics_map.credentials.secret }}
    userKey: admin-user
    passwordKey: admin-password
  deploymentStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  grafana.ini:
    database:
      cache_mode: shared
      wal: true
    security:
      admin_email: {{ global_map.credentials.cluster.postfix.user.alias }}
{% if victoriametrics_vars.kubernetes.grafana.ini.security.unsigned_plugins is iterable and
      victoriametrics_vars.kubernetes.grafana.ini.security.unsigned_plugins | length > 0 %}
      allow_loading_unsigned_plugins: {{ victoriametrics_vars.kubernetes.grafana.ini.security.unsigned_plugins | join(',') }}
{% endif %}
      cookie_secure: true
      strict_transport_security: true
    smtp:
      enabled: true
      from_address: {{ global_map.credentials.cluster.postfix.user.alias }}
      from_name: {{ global_map.credentials.victoriametrics.grafana.user.name }}
      host: {{ cluster_vars.service.postfix.relay.host }}:{{ cluster_vars.service.postfix.relay.port }}
      startTLS_policy: MandatoryStartTLS
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
      {{ victoriametrics_map.ingress.grafana.annotations | to_nice_yaml | indent(6) | trim }}
    enabled: {{ victoriametrics_vars.kubernetes.grafana.ingress.enabled | lower }}
    hosts:
      - {{ victoriametrics_map.ingress.grafana.hostname }}
    ingressClassName: {{ victoriametrics_map.ingress.class.name }}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.grafana.hostname }}
        secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.grafana.name }}
{% endif %}
  logLevel: {{ victoriametrics_vars.kubernetes.grafana.log_level }}
{% if victoriametrics_vars.kubernetes.grafana.storage.enabled is truthy %}
  persistence:
    accessModes:
      {{ victoriametrics_vars.kubernetes.grafana.storage.access_modes | to_nice_yaml | indent(6) | trim }}
    enabled: true
    size: {{ victoriametrics_vars.kubernetes.grafana.storage.size }}
    storageClassName: {{ victoriametrics_vars.kubernetes.grafana.storage.class }}
{% endif %}
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: {{ victoriametrics_vars.kubernetes.grafana.replicas }}
  resources:
    limits:
{% if victoriametrics_vars.kubernetes.grafana.resources.limits.cpu is truthy %}
      cpu: {{ victoriametrics_vars.kubernetes.grafana.resources.limits.cpu }}
{% endif %}
      memory: {{ victoriametrics_vars.kubernetes.grafana.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.grafana.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.grafana.resources.requests.memory }}
  sidecar:
    logLevel: {{ victoriametrics_vars.kubernetes.grafana.sidecar.log_level }}
    resources:
      limits:
{% if victoriametrics_vars.kubernetes.grafana.sidecar.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.requests.memory }}
  smtp:
    existingSecret: {{ victoriametrics_map.credentials.secret }}
    userKey: smtp-user
    passwordKey: smtp-password
kube-state-metrics:
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: {{ victoriametrics_vars.kubernetes.kube_state_metrics.replicas }}
  resources:
    limits:
{% if victoriametrics_vars.kubernetes.kube_state_metrics.resources.limits.cpu is truthy %}
      cpu: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.limits.cpu }}
{% endif %}
      memory: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.requests.memory }}
kubeApiServer:
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: https
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
            serverName: localhost
kubeControllerManager:
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) | trim }}
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
            serverName: localhost
kubeEtcd:
{% if k3s_map.server.ha is falsy %}
  enabled: false
{% endif %}
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) | trim }}
  service:
    port: 2381
    targetPort: 2381
  vmScrape:
    spec:
      endpoints:
        - port: http-metrics
          scheme: http
kubelet:
  vmScrape:
    spec:
      interval: {{ victoriametrics_map.service.monitor.scrape.interval }}
      scrapeTimeout: {{ victoriametrics_map.service.monitor.scrape.timeout }}
  vmScrapes:
    kubelet:
      spec:
        scrapeInterval: {{ victoriametrics_map.service.monitor.scrape.interval }}
        scrapeTimeout: {{ victoriametrics_map.service.monitor.scrape.timeout }}
kubeScheduler:
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) | trim }}
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
            serverName: localhost
prometheus-node-exporter:
  resources:
    limits:
{% if victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.limits.cpu is truthy %}
      cpu: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.limits.cpu }}
{% endif %}
      memory: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.requests.memory }}
victoria-metrics-operator:
  logLevel: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.log_level }}
  operator:
    admissionWebhooks:
      certManager:
        enabled: true
        issuer:
          group: cert-manager.io
          kind: ClusterIssuer
          name: {{ certmanager_map.ca.cluster.issuer.name }}
    enable_converter_ownership: true
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1
  replicaCount: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.replicas }}
  resources:
    limits:
{% if victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.limits.cpu is truthy %}
      cpu: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.limits.cpu }}
{% endif %}
      memory: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.requests.memory }}
vmagent:
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
      {{ victoriametrics_map.ingress.vmagent.annotations | to_nice_yaml | indent(6) | trim }}
    enabled: {{ victoriametrics_vars.kubernetes.vmagent.ingress.enabled | lower }}
    hosts:
      - {{ victoriametrics_map.ingress.vmagent.hostname }}
    ingressClassName: {{ victoriametrics_map.ingress.class.name }}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.vmagent.hostname }}
        secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmagent.name }}
{% endif %}
  spec:
    configReloaderResources:
      limits:
{% if victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.requests.memory }}
{% if victoriametrics_map.spec.vmagent.extra_args is mapping and
      victoriametrics_map.spec.vmagent.extra_args.keys() | length > 0 %}
    extraArgs:
      {{ victoriametrics_map.spec.vmagent.extra_args | to_nice_yaml(indent=2) | indent(6) | trim }}
{% endif %}
{% if victoriametrics_map.spec.vmagent.extra_envs is iterable and
      victoriametrics_map.spec.vmagent.extra_envs | length > 0 %}
    extraEnvs:
      {{ victoriametrics_map.spec.vmagent.extra_envs | to_nice_yaml(indent=2) | trim | indent(6) }}
{% endif %}
    logLevel: {{ victoriametrics_vars.kubernetes.vmagent.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
    replicaCount: {{ victoriametrics_vars.kubernetes.vmagent.replicas }}
    resources:
      limits:
{% if victoriametrics_vars.kubernetes.vmagent.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.resources.requests.memory }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    scrapeInterval: {{ victoriametrics_map.service.monitor.scrape.interval }}
    scrapeTimeout: {{ victoriametrics_map.service.monitor.scrape.timeout }}
    storage:
{% if victoriametrics_vars.kubernetes.vmagent.storage.enabled is truthy %}
      volumeClaimTemplate:
        spec:
          accessModes:
            {{ victoriametrics_vars.kubernetes.vmagent.storage.access_modes | to_nice_yaml | indent(12) | trim }}
          resources:
            requests:
              storage: {{ victoriametrics_vars.kubernetes.vmagent.storage.size }}
          storageClassName: {{ victoriametrics_vars.kubernetes.vmagent.storage.class }}
{% else %}
      emptyDir:
        sizeLimit: {{ victoriametrics_vars.kubernetes.vmagent.storage.size }}
{% endif %}
vmalert:
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
      {{ victoriametrics_map.ingress.vmalert.annotations | to_nice_yaml | indent(6) | trim }}
    enabled: {{ victoriametrics_vars.kubernetes.vmalert.ingress.enabled | lower }}
    hosts:
      - {{ victoriametrics_map.ingress.vmalert.hostname }}
    ingressClassName: {{ victoriametrics_map.ingress.class.name }}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.vmalert.hostname }}
        secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmalert.name }}
{% endif %}
  spec:
    configReloaderResources:
      limits:
{% if victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.requests.memory }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' and
      victoriametrics_vars.kubernetes.vmalert.ingress.enabled %}
    extraArgs:
      external.url: https://{{ victoriametrics_map.ingress.vmalert.hostname }}
{% endif %}
    logLevel: {{ victoriametrics_vars.kubernetes.vmalert.log_level }}
    notifier:
      selector:
        labelSelector:
          matchLabels:
            {{ victoriametrics_project.helm.chart.vmalert.notifier.labels | to_nice_yaml(indent=2) | indent(12) | trim }}
        namespaceSelector:
          matchNames:
            - {{ victoriametrics_vars.kubernetes.namespace }}
    podDisruptionBudget:
      maxUnavailable: 1
    replicaCount: {{ victoriametrics_vars.kubernetes.vmalert.replicas }}
    resources:
      limits:
{% if victoriametrics_vars.kubernetes.vmalert.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.resources.requests.memory }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{% if k3s_map.server.ha is truthy and victoriametrics_vars.kubernetes.vmcluster.enabled is truthy %}
vmcluster:
  enabled: true
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    insert:
      annotations:
        {{ victoriametrics_map.ingress.vmcluster.vminsert.annotations | to_nice_yaml | indent(8) | trim }}
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.ingress.enabled | lower }}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vminsert.hostname }}
      ingressClassName: {{ victoriametrics_map.ingress.class.name }}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vminsert.hostname }}
          secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmcluster.vminsert.name }}
    select:
      annotations:
        {{ victoriametrics_map.ingress.vmcluster.vmselect.annotations | to_nice_yaml | indent(8) | trim }}
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.ingress.enabled | lower }}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vmselect.hostname }}
      ingressClassName: {{ victoriametrics_map.ingress.class.name }}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vmselect.hostname }}
          secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmcluster.vmselect.name }}
    storage:
      annotations:
        {{ victoriametrics_map.ingress.vmcluster.vmstorage.annotations | to_nice_yaml | indent(8) | trim }}
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.enabled | lower }}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vmstorage.hostname }}
      ingressClassName: {{ victoriametrics_map.ingress.class.name }}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vmstorage.hostname }}
          secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmcluster.vmstorage.name }}
{% endif %}
  spec:
    replicationFactor: {{ victoriametrics_vars.kubernetes.vmcluster.replication_factor }}
    retentionPeriod: {{ victoriametrics_vars.kubernetes.vmcluster.retention_period }}
    vminsert:
{% if victoriametrics_map.spec.vmcluster.vminsert.extra_args is mapping and
      victoriametrics_map.spec.vmcluster.vminsert.extra_args.keys() | length > 0 %}
      extraArgs:
        {{ victoriametrics_map.spec.vmcluster.vminsert.extra_args | to_nice_yaml(indent=2) | indent(6) | trim }}
{% endif %}
{% if victoriametrics_map.spec.vmcluster.vminsert.extra_envs is iterable and
      victoriametrics_map.spec.vmcluster.vminsert.extra_envs | length > 0 %}
      extraEnvs:
        {{ victoriametrics_map.spec.vmcluster.vminsert.extra_envs | to_nice_yaml(indent=2) | trim | indent(8) }}
{% endif %}
{% if victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.enabled is truthy %}
      hpa:
        maxReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.max_replicas }}
        minReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.min_replicas }}
        metrics:
          - type: Resource
            resource:
              name: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.resource.name }}
              target:
                type: Utilization
                averageUtilization: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.resource.target.utilization }}
{% else %}
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.min_replicas }}
{% endif %}
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
{% if victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.limits.cpu is truthy %}
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.limits.cpu }}
{% endif %}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.requests.memory }}
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    vmselect:
      extraArgs:
        dedup.minScrapeInterval: {{ victoriametrics_map.service.monitor.scrape.interval }}
{% if victoriametrics_map.spec.vmcluster.vmselect.extra_args is mapping and
      victoriametrics_map.spec.vmcluster.vmselect.extra_args.keys() | length > 0 %}
        {{ victoriametrics_map.spec.vmcluster.vmselect.extra_args | to_nice_yaml(indent=2) | indent(8) | trim }}
{% endif %}
{% if victoriametrics_map.spec.vmcluster.vmselect.extra_envs is iterable and
      victoriametrics_map.spec.vmcluster.vmselect.extra_envs | length > 0 %}
      extraEnvs:
        {{ victoriametrics_map.spec.vmcluster.vmselect.extra_envs | to_nice_yaml(indent=2) | trim | indent(8) }}
{% endif %}
{% if victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.enabled is truthy %}
      hpa:
        maxReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.max_replicas }}
        minReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.min_replicas }}
        metrics:
          - type: Resource
            resource:
              name: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.resource.name }}
              target:
                type: Utilization
                averageUtilization: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.resource.target.utilization }}
{% else %}
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.min_replicas }}
{% endif %}
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
{% if victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.limits.cpu is truthy %}
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.limits.cpu }}
{% endif %}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.requests.memory }}
      rollingUpdateStrategy: RollingUpdate
      storage:
{% if victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.enabled is truthy %}
        volumeClaimTemplate:
          spec:
            accessModes:
              {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.access_modes | to_nice_yaml | indent(14) | trim }}
            resources:
              requests:
                storage: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.size }}
            storageClassName: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.class }}
{% else %}
        emptyDir:
          sizeLimit: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.size }}
{% endif %}
    vmstorage:
      extraArgs:
        dedup.minScrapeInterval: {{ victoriametrics_map.service.monitor.scrape.interval }}
{% if victoriametrics_map.spec.vmcluster.vmstorage.extra_args is mapping and
      victoriametrics_map.spec.vmcluster.vmstorage.extra_args.keys() | length > 0 %}
        {{ victoriametrics_map.spec.vmcluster.vmstorage.extra_args | to_nice_yaml(indent=2) | indent(8) | trim }}
{% endif %}
{% if victoriametrics_map.spec.vmcluster.vmstorage.extra_envs is iterable and
      victoriametrics_map.spec.vmcluster.vmstorage.extra_envs | length > 0 %}
      extraEnvs:
        {{ victoriametrics_map.spec.vmcluster.vmstorage.extra_envs | to_nice_yaml(indent=2) | trim | indent(8) }}
{% endif %}
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.replicas }}
      resources:
        limits:
{% if victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.cpu is truthy %}
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.cpu }}
{% endif %}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.memory }}
      rollingUpdateStrategy: RollingUpdate
      storage:
{% if victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.enabled is truthy %}
        volumeClaimTemplate:
          spec:
            accessModes:
              {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.access_modes | to_nice_yaml | indent(14) | trim }}
            resources:
              requests:
                storage: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
            storageClassName: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.class }}
{% else %}
        emptyDir:
          sizeLimit: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
{% endif %}
vmsingle:
  enabled: false
{% else %}
vmsingle:
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
      {{ victoriametrics_map.ingress.vmsingle.annotations | to_nice_yaml | indent(6) | trim }}
    enabled: {{ victoriametrics_vars.kubernetes.vmsingle.ingress.enabled | lower }}
    hosts:
      - {{ victoriametrics_map.ingress.vmsingle.hostname }}
    ingressClassName: {{ victoriametrics_map.ingress.class.name }}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.vmsingle.hostname }}
        secretName: {{ externaldns_vars.cloudflare.prefix }}-{{ victoriametrics_map.ingress.vmsingle.name }}
{% endif %}
  spec:
    extraArgs:
      dedup.minScrapeInterval: {{ victoriametrics_map.service.monitor.scrape.interval }}
{% if victoriametrics_map.spec.vmsingle.extra_args is mapping and
      victoriametrics_map.spec.vmsingle.extra_args.keys() | length > 0 %}
      {{ victoriametrics_map.spec.vmsingle.extra_args | to_nice_yaml(indent=2) | indent(6) | trim }}
{% endif %}
{% if victoriametrics_map.spec.vmsingle.extra_envs is iterable and
      victoriametrics_map.spec.vmsingle.extra_envs | length > 0 %}
    extraEnvs:
      {{ victoriametrics_map.spec.vmsingle.extra_envs | to_nice_yaml(indent=2) | trim | indent(6) }}
{% endif %}
    logLevel: {{ victoriametrics_vars.kubernetes.vmsingle.log_level }}
    replicaCount: {{ victoriametrics_vars.kubernetes.vmsingle.replicas }}
    resources:
      limits:
{% if victoriametrics_vars.kubernetes.vmsingle.resources.limits.cpu is truthy %}
        cpu: {{ victoriametrics_vars.kubernetes.vmsingle.resources.limits.cpu }}
{% endif %}
        memory: {{ victoriametrics_vars.kubernetes.vmsingle.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmsingle.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmsingle.resources.requests.memory }}
    retentionPeriod: {{ victoriametrics_vars.kubernetes.vmsingle.retention_period }}
{% if victoriametrics_vars.kubernetes.vmsingle.storage.enabled is truthy %}
    storage:
      accessModes:
        {{ victoriametrics_vars.kubernetes.vmsingle.storage.access_modes | to_nice_yaml | indent(12) | trim }}
      resources:
        requests:
          storage: {{ victoriametrics_vars.kubernetes.vmsingle.storage.size }}
      storageClassName: {{ victoriametrics_vars.kubernetes.vmsingle.storage.class }}
{% else %}
    storageDataPath: /vm-data
    volumeMounts:
      - mountPath: /vm-data
        name: data
    volumes:
      - emptyDir:
          sizeLimit: {{ victoriametrics_vars.kubernetes.vmsingle.storage.size }}
        name: data
{% endif %}
{% endif %}
