---
- name: Role Facts
  ansible.builtin.include_role:
    name: '{{ role }}'
    tasks_from: facts
  loop:
    - k3s
    - helm
  loop_control:
    loop_var: role

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Install packages
      ansible.builtin.apt:
        name: '{{ item }}'
        autoremove: true
        update_cache: true
      loop:
        - apt-transport-https
        - python3-kubernetes

    - name: Add variables to environment file
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: '{{ item.key }}={{ item.value }}'
        regexp: ^{{ item.key }}
      loop: "{{ lookup('ansible.builtin.dict', helm_project.environment | combine(helm_vars.environment)) | sort(attribute='key') }}"

    - name: Initialize variables
      ansible.builtin.shell: |
        set -eo pipefail
        source /etc/environment
      args:
        executable: /bin/bash
      changed_when: false

    - name: Get file statistics
      ansible.builtin.stat:
        path: /usr/share/keyrings/{{ helm_vars.release.helm.key }}
      changed_when: not helm_gpg_key.stat.exists
      register: helm_gpg_key

    - name: Helm Repository
      when: not helm_gpg_key.stat.exists
      block:
        - name: Download key
          ansible.builtin.get_url:
            url: '{{  helm_map.release.key }}'
            dest: /tmp/{{ helm_vars.release.helm.repository.key }}
            owner: root
            group: root
            mode: '644'
          register: helm_result
          delay: 1
          retries: 3
          until: helm_result is not failed

        - name: Dearmor key
          ansible.builtin.command:
            cmd: gpg --dearmor -o /usr/share/keyrings/{{ helm_vars.release.helm.key }} /tmp/{{ helm_vars.release.helm.repository.key }}
          changed_when: helm_dearmor_key.rc == 0
          register: helm_dearmor_key

        - name: Remove key
          ansible.builtin.file:
            path: /tmp/{{ helm_vars.release.helm.repository.key }}
            state: absent

        - name: Get architecture
          ansible.builtin.command:
            cmd: dpkg --print-architecture
          changed_when: false
          register: helm_architecture

        - name: Install repository
          ansible.builtin.deb822_repository:
            architectures: '{{ helm_architecture.stdout }}'
            components: main
            name: helm-{{ helm_vars.release.helm.repository.channel }}
            signed_by: /usr/share/keyrings/{{ helm_vars.release.helm.key }}
            suites: '{{ helm_vars.release.helm.distro.channel }}'
            uris: '{{  helm_map.release.channel }}/'
            enabled: true
            trusted: true

    - name: Install helm package
      ansible.builtin.apt:
        name: helm={{ helm_map.release.version }}
        allow_downgrade: true
        autoremove: true
        update_cache: true

    - name: Helm Cache
      notify: Start cache service
      block:
        - name: Create service file
          ansible.builtin.template:
            src: service.j2
            dest: /etc/systemd/system/helm-cache.service
            owner: root
            group: root
            mode: '644'

        - name: Create service timer file
          ansible.builtin.template:
            src: timer.j2
            dest: /etc/systemd/system/helm-cache.timer
            owner: root
            group: root
            mode: '644'

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Helm Plugins
      ansible.builtin.import_tasks:
        file: plugins.yaml
