---
- name: Role Facts
  ansible.builtin.include_role:
    name: '{{ role }}'
    tasks_from: facts
  loop:
    - external-dns
    - k3s
    - victoria-metrics
    - longhorn
  loop_control:
    loop_var: role

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: '{{ k3s_vars.server.api.port }}'
        timeout: 30
      any_errors_fatal: true

    - name: Install binary
      ansible.builtin.get_url:
        url: '{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}'
        checksum: sha256:{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}.sha256
        dest: '{{ k3s_map.node.directory.bin }}/longhornctl'
        owner: root
        group: root
        mode: '755'
      register: longhorn_result
      delay: 1
      retries: 3
      until: longhorn_result is not failed

    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ longhorn_vars.kubernetes.helm.repository.org }}'
        repo_url: '{{ longhorn_vars.kubernetes.helm.repository.url }}'
        force_update: true
      register: longhorn_result
      delay: 1
      retries: 3
      until: longhorn_result is not failed

    - name: Chart Setup
      run_once: true
      block:
        - name: Create backup credentials secret
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'credentials.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            wait: true
          when:
            - longhorn_vars.kubernetes.backup.enabled is truthy
            - longhorn_vars.kubernetes.backup.target[:3] | lower != 'nfs'
          no_log: true

        - name: Get gateway info
          kubernetes.core.k8s_info:
            kind: Gateway
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ longhorn_vars.kubernetes.frontend.gateway.service }}'
            namespace: '{{ longhorn_vars.kubernetes.namespace }}'
            wait_timeout: 10
            wait: true
          register: longhorn_gateway

        - name: Ingress Setup
          when:
            - externaldns_vars.cloudflare.host.domain | lower != 'disabled'
            - longhorn_gateway.resources is iterable and longhorn_gateway.resources | length > 0
            - longhorn_vars.kubernetes.frontend.ingress.enabled is truthy
          block:
            - name: Delete gateway
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'gateway.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                state: absent
                wait: true

            - name: Delete insecure http route
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'http_route_insecure.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                state: absent
                wait: true

            - name: Delete secure http route
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'http_route_secure.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                state: absent
                wait: true

        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            longhorn_postinstall: false

        - name: Install chart
          kubernetes.core.helm:
            chart_ref: '{{ longhorn_map.helm.chart.reference }}'
            chart_version: '{{ longhorn_vars.kubernetes.helm.chart.version }}'
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ longhorn_vars.kubernetes.helm.chart.name }}'
            namespace: '{{ longhorn_vars.kubernetes.namespace }}'
            timeout: '{{ longhorn_map.helm.timeout }}'
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            create_namespace: true
            update_repo_cache: true
            wait: true
          register: longhorn_result
          delay: 1
          retries: 3
          until: longhorn_result is not failed

        - name: Gateway Setup
          when:
            - externaldns_vars.cloudflare.host.domain | lower != 'disabled'
            - longhorn_vars.kubernetes.frontend.ingress.enabled is falsy
          block:
            - name: Create gateway
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'gateway.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                wait: true

            - name: Create insecure http route
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'http_route_insecure.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                wait: true

            - name: Create secure http route
              kubernetes.core.k8s:
                definition: "{{ lookup('ansible.builtin.template', 'http_route_secure.j2') | from_yaml }}"
                kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
                wait: true
