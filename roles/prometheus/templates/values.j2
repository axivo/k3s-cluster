alertmanager:
  alertmanagerSpec:
    logLevel: {{ prometheus_vars.kubernetes.alertmanager.log_level }}
    replicas: {{ prometheus_vars.kubernetes.alertmanager.replicas }}
    resources:
      limits:
        cpu: {{ prometheus_vars.kubernetes.alertmanager.resources.limits.cpu }}
        memory: {{ prometheus_vars.kubernetes.alertmanager.resources.limits.memory }}
      requests:
        cpu: {{ prometheus_vars.kubernetes.alertmanager.resources.requests.cpu }}
        memory: {{ prometheus_vars.kubernetes.alertmanager.resources.requests.memory }}
    retention: {{ prometheus_vars.kubernetes.alertmanager.retention }}
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn-rwx
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: {{ prometheus_vars.kubernetes.alertmanager.storage }}
{% if cloudflare_vars.kubernetes.gateway.domain | lower == 'disabled' %}
  service:
    annotations:
{% for key, value in prometheus_vars.kubernetes.alertmanager.infrastructure.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    type: LoadBalancer
{% endif %}
grafana:
  admin:
    existingSecret: {{ prometheus_vars.kubernetes.grafana.secret.name }}
    passwordKey: password
    userKey: username
{% if cloudflare_vars.kubernetes.gateway.domain | lower == 'disabled' %}
  service:
    annotations:
{% for key, value in prometheus_vars.kubernetes.grafana.infrastructure.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    type: LoadBalancer
{% endif %}
kubeControllerManager:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeEtcd:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeProxy:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeScheduler:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
prometheus:
  prometheusSpec:
{% if not prometheus_vars.kubernetes.prometheus.compaction.enabled %}
    disableCompaction: true
{% endif %}
    logLevel: {{ prometheus_vars.kubernetes.prometheus.log_level }}
    enableAdminAPI: true
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    replicaExternalLabelName: replica
    replicas: {{ prometheus_vars.kubernetes.prometheus.replicas }}
    resources:
      limits:
        cpu: {{ prometheus_vars.kubernetes.prometheus.resources.limits.cpu }}
        memory: {{ prometheus_vars.kubernetes.prometheus.resources.limits.memory }}
      requests:
        cpu: {{ prometheus_vars.kubernetes.prometheus.resources.requests.cpu }}
        memory: {{ prometheus_vars.kubernetes.prometheus.resources.requests.memory }}
    retention: {{ prometheus_vars.kubernetes.prometheus.retention }}
    retentionSize: {{ prometheus_vars.kubernetes.prometheus.retention_size }}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ prometheus_vars.kubernetes.prometheus.storage }}
{% if cloudflare_vars.kubernetes.gateway.domain | lower == 'disabled' %}
  service:
    annotations:
{% for key, value in prometheus_vars.kubernetes.prometheus.infrastructure.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    type: LoadBalancer
{% endif %}
