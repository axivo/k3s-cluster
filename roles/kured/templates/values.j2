configuration:
  concurrency: {{ kured_vars.kubernetes.configuration.concurrency }}
{% if kured_vars.kubernetes.configuration.log_format != 'text' %}
  logFormat: {{ kured_vars.kubernetes.configuration.log_format }}
{% endif %}
  period: {{ kured_vars.kubernetes.configuration.period }}
  rebootDelay: {{ kured_vars.kubernetes.configuration.reboot_delay }}
{% if kured_vars.kubernetes.configuration.slack.enabled %}
{% if kured_vars.kubernetes.configuration.slack.messages.enabled %}
  messageTemplateDrain: {{ kured_vars.kubernetes.configuration.slack.messages.drain }}
  messageTemplateReboot: {{ kured_vars.kubernetes.configuration.slack.messages.reboot }}
  messageTemplateUncordon: {{ kured_vars.kubernetes.configuration.slack.messages.uncordon }}
{% endif %}
  notifyUrl: {{ kured_vars.kubernetes.configuration.slack.notify_url }}
{% endif %}
  startTime: {{ kured_vars.kubernetes.configuration.time.start }}
  endTime: {{ kured_vars.kubernetes.configuration.time.end }}
  timeZone: {{ kured_vars.kubernetes.configuration.time.zone }}
metrics:
  create: {{ kured_vars.kubernetes.metrics.create }}
  labels:
    release: {{ prometheus_vars.kubernetes.helm.chart.name }}
  namespace: {{ prometheus_vars.kubernetes.namespace }}
{% if kured_postinstall %}
resources:
  limits:
    cpu: {{ kured_vars.kubernetes.resources.limits.cpu }}
    memory: {{ kured_vars.kubernetes.resources.limits.memory }}
  requests:
    cpu: {{ kured_vars.kubernetes.resources.requests.cpu }}
    memory: {{ kured_vars.kubernetes.resources.requests.memory }}
{% endif %}
service:
  annotations:
{% for key, value in kured_vars.kubernetes.service.annotations.items() %}
    {{ key | indent(4) }}: {{ value }}
{% endfor %}
  create: {{ kured_vars.kubernetes.service.create }}
  name: {{ kured_vars.kubernetes.service.name }}
{% if k3s_vars.server.controlplane.tainted %}
tolerations:
  {{ k3s_vars.tolerations | to_nice_yaml | indent(2) }}
{% endif %}
