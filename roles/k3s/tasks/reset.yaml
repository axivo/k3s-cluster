---
- name: Role Facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: Role Reset
  block:
    - name: Loadbalancer Reset
      when:
        - inventory_hostname in k3s_map.loadbalancer.hosts
        - prompt_remove_packages in ['y', 'Y']
      block:
        - name: Remove loadbalancer packages
          ansible.builtin.apt:
            name: '{{ item }}'
            state: absent
            autoremove: true
            clean: true
            purge: true
          loop:
            - haproxy
            - keepalived
          when: item in ansible_facts.packages

        - name: Remove loadbalancer configuration files
          ansible.builtin.file:
            path: '{{ item }}'
            state: absent
          loop:
            - /etc/keepalived
            - /etc/sysctl.d/90-ip-nonlocal-bind.conf

    - name: Stop service
      ansible.builtin.assert:
        quiet: true
        that: true
      changed_when: true
      notify:
        - Stop kubernetes service
        - Reboot

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Remove cluster files
      ansible.builtin.shell: |
        set -eo pipefail
        kill -KILL -f {{ k3s_node.binary }} || true
        if [[ -d {{ item }} ]]; then
          while read -r process; do
            kill -KILL "$process" || true
          done < <(ps -eo pid= -o args= | grep {{ item }} | grep -v $$ | awk '{print $1}')
          while read -r mount; do
            umount -lf "$mount" || true
          done < <(findmnt -no TARGET | grep {{ item }} | sort -r)
          rm -rf {{ item }} || true
        fi
      args:
        executable: /bin/bash
      changed_when: true
      loop:
        - /var/lib/cni
        - /var/lib/kubelet
        - /var/lib/rancher

    - name: Server Reset
      when: inventory_hostname in k3s_map.server.hosts
      block:
        - name: Remove server files
          ansible.builtin.file:
            path: '{{ item }}'
            state: absent
          loop:
            - '{{ k3s_map.node.directory.bin }}/{{ k3s_vars.release.kubepug.name }}'

        - name: Remove variable from environment file
          ansible.builtin.lineinfile:
            path: /etc/environment
            line: KUBECONFIG={{ k3s_project.cluster.kubeconfig }}
            regexp: ^KUBECONFIG
            state: absent

    - name: Remove generic files
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      loop:
        - '{{ k3s_map.node.directory.bin }}/crictl'
        - '{{ k3s_map.node.directory.bin }}/ctr'
        - '{{ k3s_map.node.directory.bin }}/kubectl'
        - '{{ k3s_map.node.directory.config }}'
        - '{{ k3s_node.binary }}'
        - /etc/sysctl.d/90-kubernetes-node.conf
        - /etc/sysctl.d/99-zzz-override_cilium.conf
        - /etc/systemd/system/{{ k3s_node.service.name }}.service
        - /etc/systemd/system/{{ k3s_node.service.name }}.service.env

    - name: Remove local kubeconfig files
      ansible.builtin.file:
        path: '{{ k3s_vars.cluster.kubeconfig.path }}/{{ item }}'
        state: absent
      delegate_to: localhost
      loop:
        - cache
        - config
        - http-cache
      when: k3s_vars.cluster.kubeconfig.local is truthy
      become: false
      run_once: true

    - name: Reload systemd unit files
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Reset failed systemd services
      ansible.builtin.command:
        cmd: systemctl reset-failed
      changed_when: false
