---
- name: Role Facts
  ansible.builtin.include_role:
    name: '{{ role }}'
    tasks_from: facts
  loop:
    - external-dns
    - k3s
    - victoria-metrics
    - argo-cd
  loop_control:
    loop_var: role

- name: Role Provisioning
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: '{{ k3s_vars.server.api.port }}'
        timeout: 30
      any_errors_fatal: true

    - name: Set checksums fact
      ansible.builtin.uri:
        url: '{{ argocd_project.release.url }}/{{ argocd_project.release.checksum }}'
        return_content: true
      register: argocd_checksums
      delay: 1
      retries: 3
      until: argocd_checksums is not failed
      check_mode: false
      run_once: true

    - name: Set sha256 checksum fact
      ansible.builtin.set_fact:
        argocd_sha256_checksum: "{{ item.split(' ')[0] }}"
      loop: "{{ argocd_checksums.content.split('\n') }}"
      when: item is search(argocd_vars.release.file + '$')
      run_once: true

    - name: Install binary
      ansible.builtin.get_url:
        url: '{{ argocd_project.release.url }}/{{ argocd_project.release.file }}'
        checksum: sha256:{{ argocd_sha256_checksum }}
        dest: '{{ k3s_map.node.directory.bin }}/argocd'
        owner: root
        group: root
        mode: '755'
      register: argocd_result
      delay: 1
      retries: 3
      until: argocd_result is not failed

    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ argocd_vars.kubernetes.helm.repository.org }}'
        repo_url: '{{ argocd_map.helm.repository.url }}'
        force_update: true
      register: argocd_result
      delay: 1
      retries: 3
      until: argocd_result is not failed

    - name: Chart Setup
      run_once: true
      block:
        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            argocd_postinstall: false

        - name: Install chart
          kubernetes.core.helm:
            chart_ref: '{{ argocd_map.helm.chart.reference }}'
            chart_version: '{{ argocd_vars.kubernetes.helm.chart.version }}'
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ argocd_vars.kubernetes.helm.chart.name }}'
            namespace: '{{ argocd_vars.kubernetes.namespace }}'
            timeout: '{{ argocd_map.helm.timeout }}'
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            create_namespace: true
            update_repo_cache: true
            wait: true
          register: argocd_result
          delay: 1
          retries: 3
          until: argocd_result is not failed
