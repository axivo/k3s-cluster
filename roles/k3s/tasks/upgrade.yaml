---
- name: Role Facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: Cluster Validation
  when: inventory_hostname == k3s_map.server.default_host
  run_once: true
  block:
    - name: Get binary status
      ansible.builtin.stat:
        path: '{{ k3s_node.binary }}'
      changed_when: not k3s_binary.stat.exists
      register: k3s_binary

    - name: Validate deployed cluster
      ansible.builtin.assert:
        that: k3s_binary.stat.exists
        fail_msg: 'ERROR: K3s cluster not deployed.'
        quiet: true

    - name: Get deployed cluster version
      kubernetes.core.k8s_cluster_info:
        kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
      register: k3s_cluster
      no_log: true

- name: Role Upgrade
  block:
    - name: Install k3s binary
      ansible.builtin.get_url:
        url: '{{ k3s_project.release.k3s.file }}'
        checksum: sha256:{{ k3s_project.release.k3s.checksum }}
        dest: '{{ k3s_node.binary }}'
        owner: root
        group: root
        mode: '755'
      register: k3s_result
      delay: 1
      retries: 3
      until: k3s_result is not failed
      when: k3s_cluster.version.server.kubernetes.gitVersion != k3s_vars.release.k3s.version

    - name: Get configuration file status
      ansible.builtin.stat:
        checksum: sha256
        path: '{{ k3s_project.cluster.config }}'
      register: k3s_file

    - name: Set role postinstall fact
      ansible.builtin.set_fact:
        k3s_postinstall: false

    - name: Update configuration file
      ansible.builtin.template:
        src: config.j2
        dest: '{{ k3s_project.cluster.config }}'
        owner: root
        group: root
        mode: '600'

    - name: Update service file
      ansible.builtin.template:
        src: service.j2
        dest: /etc/systemd/system/{{ k3s_map.service.name }}.service
        owner: root
        group: root
        mode: '644'

    - name: Role Configuration
      ansible.builtin.import_tasks:
        file: configuration.yaml

    - name: Set role postinstall fact
      ansible.builtin.set_fact:
        k3s_postinstall: true

    - name: Update configuration file
      ansible.builtin.template:
        src: config.j2
        dest: '{{ k3s_project.cluster.config }}'
        owner: root
        group: root
        mode: '600'

    - name: Get revised configuration file status
      ansible.builtin.stat:
        checksum: sha256
        path: '{{ k3s_project.cluster.config }}'
      register: k3s_file_revised

    - name: Schedule reboot
      ansible.builtin.file:
        path: /var/run/reboot-required
        access_time: preserve
        modification_time: preserve
        state: touch
        owner: root
        group: root
        mode: '644'
      when: >
        (k3s_file.stat.checksum != k3s_file_revised.stat.checksum) or
        (k3s_cluster.version.server.kubernetes.gitVersion != k3s_vars.release.k3s.version)
