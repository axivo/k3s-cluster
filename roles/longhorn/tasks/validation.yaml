---
- name: Role Facts
  ansible.builtin.include_role:
    name: '{{ role }}'
    tasks_from: facts
  loop:
    - external-dns
    - k3s
    - victoria-metrics
    - longhorn
  loop_control:
    loop_var: role

- name: Role Validation
  when: ('validation' in ansible_run_tags)
  run_once: true
  block:
    - name: Validate project url
      ansible.builtin.uri:
        url: '{{ longhorn_project.url }}/{{ longhorn_project.tag }}'
        timeout: 5
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Validate release checksum url
      ansible.builtin.uri:
        url: '{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}.sha256'
        timeout: 5
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Validate release file url
      ansible.builtin.uri:
        url: '{{ longhorn_project.release.url }}/{{ longhorn_project.release.file }}'
        timeout: 5
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Chart Validation
      block:
        - name: Add repository
          kubernetes.core.helm_repository:
            name: '{{ longhorn_vars.kubernetes.helm.repository.org }}'
            repo_url: '{{ longhorn_vars.kubernetes.helm.repository.url }}'

        - name: Get deployed chart release info
          kubernetes.core.helm_info:
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ longhorn_vars.kubernetes.helm.chart.name }}'
            namespace: '{{ longhorn_vars.kubernetes.namespace }}'
          register: release
          changed_when: false

        - name: Set comparison fact
          ansible.builtin.set_fact:
            comparison:
              chart: '{{ longhorn_map.helm.chart.version }}'
              release: "{{ (release.status.chart | default('0')).split('-')[-1] }}"

        - name: Credentials Validation
          when: longhorn_vars.kubernetes.backup.target[:4] | lower == 'cifs'
          block:
            - name: Set credentials fact
              ansible.builtin.set_fact:
                credentials: "{{ lookup('ansible.builtin.template', 'credentials.j2') | from_yaml }}"
              no_log: true

            - name: Set string data fact
              ansible.builtin.set_fact:
                string_data:
                  user: "{{ credentials.stringData['CIFS_USERNAME'] | b64encode }}"
                  password: "{{ credentials.stringData['CIFS_PASSWORD'] | b64encode }}"
              no_log: true

            - name: Validate credentials values
              ansible.builtin.debug:
                msg: "{{ credentials | combine({'stringData': {'CIFS_PASSWORD': string_data.password, 'CIFS_USERNAME': string_data.user}}) }}"

        - name: Gateway Validation
          when: longhorn_vars.kubernetes.frontend.ingress.enabled is falsy
          block:
            - name: Validate gateway values
              ansible.builtin.debug:
                msg: "{{ lookup('ansible.builtin.template', 'gateway.j2') }}"

            - name: Validate insecure http route values
              ansible.builtin.debug:
                msg: "{{ lookup('ansible.builtin.template', 'http_route_insecure.j2') }}"

            - name: Validate secure http route values
              ansible.builtin.debug:
                msg: "{{ lookup('ansible.builtin.template', 'http_route_secure.j2') }}"

        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            longhorn_postinstall: false

        - name: Validate chart values
          ansible.builtin.debug:
            msg: "{{ lookup('ansible.builtin.template', 'values.j2') }}"

        - name: Set chart values fact
          ansible.builtin.set_fact:
            chart_values: "{{ lookup('ansible.builtin.template', 'values.j2') | trim | from_yaml }}"
          when:
            - comparison.release is version('0', '>')
            - comparison.release != comparison.chart

        - name: Update chart postinstall fact
          ansible.builtin.set_fact:
            longhorn_postinstall: true

        - name: Validate postinstall chart values
          ansible.builtin.debug:
            msg: "{{ lookup('ansible.builtin.template', 'values.j2') }}"

        - name: Chart Deployment Simulation
          when:
            - comparison.release is version('0', '>')
            - comparison.release != comparison.chart
          block:
            - name: Update chart values fact
              ansible.builtin.set_fact:
                chart_values: "{{ chart_values | combine(lookup('ansible.builtin.template', 'values.j2') | trim | from_yaml, recursive=true) }}"

            - name: Set chart values url fact
              ansible.builtin.set_fact:
                chart_values_url:
                  - '{{ longhorn_map.helm.platform.raw }}'
                  - '{{ longhorn_vars.kubernetes.helm.repository.org }}/charts/refs/tags'
                  - '{{ longhorn_vars.kubernetes.helm.chart.name }}-%s/charts'
                  - '{{ longhorn_vars.kubernetes.helm.chart.name }}/values.yaml'

            - name: Compare chart values
              ansible.builtin.command:
                cmd: bash -c "diff -u
                  <(curl -s {{ chart_values_url | join('/') | format(comparison.release) }})
                  <(curl -s {{ chart_values_url | join('/') | format(comparison.chart) }})"
              register: result
              delay: 1
              retries: 3
              until: result is not failed
              changed_when: false
              failed_when: result.rc > 1

            - name: Chart values comparison result
              ansible.builtin.debug:
                msg: "{{ result.stdout if result.stdout | length > 0 else 'No chart comparison changes found.' }}"

            - name: Set chart deployment simulation command fact
              ansible.builtin.set_fact:
                simulation_command:
                  - 'helm diff upgrade {{ longhorn_vars.kubernetes.helm.chart.name }} {{ longhorn_map.helm.chart.reference }}'
                  - '  --kubeconfig {{ k3s_project.cluster.kubeconfig }} --namespace {{ longhorn_vars.kubernetes.namespace }}'
                  - '  --version {{ longhorn_vars.kubernetes.helm.chart.version }} --context 3 --values -'

            - name: Display chart deployment simulation command
              ansible.builtin.debug:
                msg: "{{ simulation_command | join(' \\\n') }} << 'EOF'\n{{ chart_values | to_nice_yaml(indent=2) }}EOF"

            - name: Run chart deployment simulation command
              ansible.builtin.command:
                cmd: "{{ simulation_command | join(' ') }}"
                stdin: "{{ chart_values | to_yaml }}"
              register: result
              delay: 1
              retries: 3
              until: result is not failed
              changed_when: false

            - name: Chart deployment simulation result
              ansible.builtin.debug:
                msg: "{{ result.stdout if result.stdout | length > 0 else 'No chart deployment errors found.' }}"
